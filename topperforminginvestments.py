# -*- coding: utf-8 -*-
"""TopPerformingInvestments.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1izsc2Y3P1PAP7cfBGcYVOOaI_K-mRDkH
"""

# cleaning data in excel and adding Range Column in Investment Accounts
import numpy as np
from dateutil import relativedelta
import pandas as pd
import streamlit as st
#import pandas as pd1
df_IA=pd.read_excel('investment_accounts.xlsx')
df_IA['INVESTMENTSTARTDATE'] = pd.to_datetime(df_IA['INVESTMENTSTARTDATE']).dt.date
df_IA['INVESTMENTENDDATE'] = pd.to_datetime(df_IA['INVESTMENTENDDATE']).dt.date
df_IA= df_IA.loc[df_IA['INVESTMENTENDDATE']> df_IA['INVESTMENTSTARTDATE']]

df_IA['DURATION']=round((df_IA['INVESTMENTENDDATE']-df_IA['INVESTMENTSTARTDATE'])/  pd.Timedelta('30D'))

print(df_IA.head())

def condition(x):
    if x>0 and x<6:
        return "1-6 months"
    elif x>=6 and x<=12:
        return "6-12 months"
    elif x>=13 and x<=24:
        return "1-2 years"
    elif x>=25 and x<=36:
        return "2-3 years"
    elif x>=37 and x<=48:
        return "3-4 years"

    else:
        return '4-5 years'
##dataset['Range'] = dataset[dataset['DURATION'] > 0 & dataset['DURATION'] < 6]
df_IA['Range']= df_IA['DURATION'].apply(condition)
print(df_IA.head())

dataset_MF = df_IA.loc[df_IA['ACCOUNTTYPE']== 'Mutual Funds']
dataset_Stocks = df_IA.loc[df_IA['ACCOUNTTYPE']=='Stocks']
dataset_FD = df_IA.loc[df_IA['ACCOUNTTYPE']=='Fixed Deposits']

Investment_Duration_Range = ['1-6 months','6-12 months','1-2 years','2-3 years','3-4 years','4-5 years']
Investments=['MF','Stocks','FD']

import plotly.express as px
for count, ele in enumerate(Investment_Duration_Range):
    CR_count =[]
    dataset_MF_count = dataset_MF.loc[dataset_MF['Range']== ele]
    MF_count_mean = round((dataset_MF_count['RETURNS'].mean()),2)
    CR_count.append(MF_count_mean)
    dataset_Stocks_count = dataset_Stocks.loc[dataset_Stocks['Range']== ele]
    Stocks_count_mean = round((dataset_Stocks_count['RETURNS'].mean()),2)
    CR_count.append(Stocks_count_mean)
    dataset_FD_count = dataset_FD.loc[dataset_FD['Range']== ele]
    FD_count_mean = round((dataset_FD_count['RETURNS'].mean()),2)

    CR_count.append(FD_count_mean)
    data_count= {"name":["Mutual Funds","Stocks","Fixed Deposits"],"Cumulative Returns":CR_count}
    df= pd.DataFrame(data_count)
    #x= ["Mutual Funds","Stocks","Fixed Deposits"]
    fig = px.bar(df, x='name', y="Cumulative Returns", color="Cumulative Returns",title=ele +" Returns%",
    category_orders={"InvestmentType": ["Mutual Funds","Stocks","Fixed Deposits"],
                              "Cumulative Returns": CR_count})

    #fig.show()
    st.plotly_chart(fig,use_container_width=True)    
